{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_utils_typography__WEBPACK_IMPORTED_MODULE_4__","BlogIndex","_ref","data","location","posts","allMarkdownRemark","edges","a","createElement","title","map","_ref2","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","to","date","dangerouslySetInnerHTML","__html","description","excerpt","scale","THEME_BLUE","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","SecondaryHeader","react__WEBPACK_IMPORTED_MODULE_2___default","fontFamily","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","Menu","styled","ul","listStyleType","MenuItem","li","Object","assign","display","&:after","margin","content","&:last-child:after","MenuEntry","current","children","Layout","_ref3","_public_static_d_452382371_json__WEBPACK_IMPORTED_MODULE_1__","site","siteMetadata","pathname","marginLeft","marginRight","maxWidth","padding","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","propTypes","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-blog-js-4de33161b7b894e4e943.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction BlogIndex({ data, location }) {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location}>\n      <SEO title=\"All posts\"/>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <div key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4),\n              }}\n            >\n              <Link to={node.fields.slug}>{title}</Link>\n            </h3>\n            <small>{node.frontmatter.date}</small>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: node.frontmatter.description || node.excerpt,\n              }}\n            />\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC },\n      filter: { frontmatter: { tags: { nin: [\"_draft\"] } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\nexport const THEME_BLUE = \"#007acc\"\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport styled from \"@emotion/styled\"\n\nexport const SecondaryHeader = ({ title }) => (\n  <h3\n    style={{\n      fontFamily: `Montserrat, sans-serif`,\n      marginTop: 0,\n    }}\n  >\n    <Link\n      style={{\n        boxShadow: `none`,\n        textDecoration: `none`,\n        color: `inherit`,\n      }}\n      to={`/`}\n    >\n      {title}\n    </Link>\n  </h3>\n)\n\nconst Menu = styled.ul({\n  listStyleType: 'none'\n})\n\nconst MenuItem = styled.li({\n  ...scale(1 / 4),\n  display: 'inline-block',\n  '&:after': {\n    margin: rhythm(1 / 4),\n    content: '\"\\\\2014\"'\n  },\n  '&:last-child:after': {\n    content: '\"\"'\n  }\n})\n\nfunction MenuEntry({ to, current, children }) {\n  return (\n    <MenuItem><Link style={current === to ? {boxShadow: 'none'} : null} to={to}>{children}</Link></MenuItem>\n  )\n}\n\nfunction Layout({ children, location }) {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `);\n  const title = data.site.siteMetadata.title\n  const current = location && location.pathname\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>\n        <SecondaryHeader title={title}/>\n        <Menu>\n          <MenuEntry current={current} to=\"/experiences/\">About</MenuEntry>\n          <MenuEntry current={current} to=\"/projects/\">Projects</MenuEntry>\n          <MenuEntry current={current} to=\"/blog/\">Blog</MenuEntry>\n        </Menu>\n      </header>\n      <main>{children}</main>\n      <footer>\n\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}