{"data":{"site":{"siteMetadata":{"title":"alextren.dev","author":"Alexandre Trendel"}},"markdownRemark":{"id":"4d1275d4-0a4b-590c-8dd6-3fcfdc7cc357","excerpt":"As part of the redesign of their website, Centrale Nantes decided to make their website english-first — even though most of our courses are taught in French. I…","html":"<p>As part of the redesign of their website, <a href=\"https://ec-nantes.fr\">Centrale Nantes</a> decided to make their website english-first — even though most of our courses are taught in French. I had therefore no choice but to follow along and make sur my <a href=\"https://edt-ecn.herokuapp.com\">timetable</a> was properly translated! Fortunately, there is not much to translate.</p>\n<p>However, I have chosen not to go with any i18n library for React. They all seemed all too complicated for what I wanted to do. Additionally, I wanted to avoid modifying my markup all that much. For instance, I wanted to avoid injecting an extra prop everywhere, or play with context too explicitly. <strong>Here is what I ended up doing.</strong></p>\n<p>I went from</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">SomeButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Button label<span class=\"token operator\">=</span><span class=\"token string\">\"Sélectionner des calendriers\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">SomeComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> calendrier(s) sélectionné(s)</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>to</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">SomeButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">label</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T.SelectCalendars</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">SomeComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T.NSelectedCalendars</span></span> <span class=\"token attr-name\">n</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>where <code class=\"language-text\">SelectCalendars</code> and <code class=\"language-text\">NSelectedCalendars</code> are translations keys — either strings, or functions :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">s</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">n</span> <span class=\"token operator\">=></span> n <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string\">'s'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    fr<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// more keys here</span>\n        SelectCalendars<span class=\"token punctuation\">:</span> <span class=\"token string\">'Sélectionner des calendriers'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">NSelectedCalendars</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>n<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> calendrier</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">s</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> sélectionné</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">s</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    en<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// more keys here</span>\n        SelectCalendars<span class=\"token punctuation\">:</span> <span class=\"token string\">'Select calendars'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">NSelectedCalendars</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>n<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> selected calendar</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">s</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>How does it work ?</h3>\n<p>All the <code class=\"language-text\">T.*</code> components have access to some context holding the translations from the file above. From there, it is easy enough to create a <code class=\"language-text\">Consumer</code> :</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Translation</span></span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>SelectCalendars<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>but this is not <em>sexy</em> enough (although handy when the translation key is not known ahead of time, of course!). </p>\n<p>The trick here is to use a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">ES2015 Proxy</a>. A proxy is created using two arguments, a <em>target</em> object to decorate and a <em>handler</em> object. In my case, the <em>handler</em> was an object with a <code class=\"language-text\">get</code> key. A proxy defined as such behaves similarly to a Python class which defines <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__getattr__\">the <code class=\"language-text\">__getattr__</code> method</a> : that is, attempts to access members of the <em>target</em> object (say, <code class=\"language-text\">target.foo</code>) will in turn call the function at <code class=\"language-text\">handler.get</code>. The latter should be a function taking the targeted object as its first argument and the key (<code class=\"language-text\">&quot;foo&quot;</code>).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">get</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// do something</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This explains the magical <code class=\"language-text\">T.*</code> components! When React attempts to create some <code class=\"language-text\">T.Key</code> component, our function is called with that particular key. All we need to do is to create the correct <code class=\"language-text\">Translation</code> component. </p>\n<p>Alternatively, one could simply create the <code class=\"language-text\">T</code> object by iterating over all the keys in our translation object, creating the matching components ahead of time, but this is far from ideal (we probably don’t need to have all those components in memory!). Additionally, this lets us gracefully handle an attempt to add an unknown translation. In my case, whenever some key has not been translated, a warning is logged to the console and the <code class=\"language-text\">T.*</code> component falls back to just displaying the key.</p>\n<h3>Further reading</h3>\n<p>The full code for the <code class=\"language-text\">T</code> object is in the repository. Note that a proxy can do much more than that </p>","frontmatter":{"title":"Simple (and fancy) internationalization in React","date":"Invalid date","description":null,"tags":["edt-ecn","ecn","javascript","react"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/simple-i18n-react/","previous":{"fields":{"slug":"/hi-folks/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}